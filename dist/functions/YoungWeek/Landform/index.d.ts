import { Mesh, Object3D, Object3DEventMap, Scene, Vector3 } from 'three';
import { CollegeOption, SceneOption } from '../config';
import { PanControls } from 'src/utils/Controls/PanControls';
export declare class Landform {
    private scene;
    private controls;
    private endCbOption?;
    private faceToOption?;
    private land;
    private update;
    private mixer?;
    private actionClips;
    private isBlocked;
    private collegeGroup;
    private posGroup;
    private boxGroup;
    private endCb?;
    private afterRunCb?;
    private human;
    private humanRun;
    private humanBreathe;
    private lastAction;
    private lastName;
    private isPlayingRun;
    private targetPosition;
    private linearPer;
    private fadeIn;
    private faceTo;
    private turnPer;
    private faceDis;
    private runSpeed;
    private safeDis;
    constructor(scene: Scene, option: SceneOption, nameOption: CollegeOption[], controls: PanControls, endCbOption?: ((index: number, name: string) => void) | undefined, faceToOption?: ((index: number, name: string) => void) | undefined);
    private handleAnimation;
    get colleges(): Mesh<import("three").BufferGeometry<import("three").NormalBufferAttributes>, import("three").Material | import("three").Material[], Object3DEventMap>[];
    private setHumanTarget;
    setHuman(position: Vector3): void;
    chooseCollege(mesh: Object3D<Object3DEventMap>): void;
    reset(): void;
    makeSafe(): void;
    dispose(): void;
}
